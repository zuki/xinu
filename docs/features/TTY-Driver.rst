TTYドライバ
=============

.. image:: TtyDriver.png
   :width: 450px
   :align: right

XINUのTTYドライバは  :source:`device/tty/` にあり、ハードウェアデバイス
ドライバとユーザーアプリケーションの間の仲介デバイスとして、入力のライン
バッファリングと入出力の行編集機能を提供します。このドライバは純粋に
ソフトウェア指向であり、物理的なハードウェアと直接通信を行うことはありません。
TTYドライバはハードウェアと直接通信するためには基盤となるデバイスドライバに
依存します。 :doc:`XINUシェル <Shell>` はTTY デバイスを利用してUARTなどの
別のデバイスから読み取ったユーザー入力をラインバッファリングし、行編集します。

オープンとクローズ
---------------------

:source:`ttyOpen() <device/tty/ttyOpen.c>` は :source:`open() <system/open.c>`
から呼び出され、TTYとその基盤となる文字指向のハードウェアデバイスを関連付けます。
TTYが1文字ずつ入力文字を取得し、文字を出力を送信するために下位のデバイスドライバは
``getc()`` 関数と ``putc()`` 関数を提供する必要があります。このデバイスはTTYを
開く前にすでにオープンされ、初期化されている必要があります。TTYがオープンされると
そのデバイス制御ブロックと入力バッファ、フラグが初期化されます。TTYデバイスが
オープンされた際、入力フラグは設定されませんが、出力フラグの ``TTY_ONLCR`` は設定
されます。

:source:`ttyClose() <device/tty/ttyClose.c>` は :source:`close() <system/close.c>`
を介して呼び出され、TTYをその基盤となるデバイスから切り離し、TTYのデバイス
制御ブロックをリセットします。

読み取り
--------

TTYドライバは基盤となるデバイスドライバからデバイスの ``getc()`` 関数を使用して
文字を読み取ります。入力はまずTTYドライバの循環バッファにバッファリングされてから
``ttyRead()`` 関数呼び出しのパラメータとして供給されたユーザバッファにコピーされます。

:source:`ttyRead() <device/tty/ttyRead.c>` 関数はまず ``ieof`` フラグをチェックして
最後に ``ttyRead()`` を呼び出したときにEOF文字 (Control+D) が読まれたかどうかを
判定します。 ``ieof`` フラグがセットされていた場合は ``stddef.h``で定義されている
定数 ``EOF`` を返します。 ``EOF`` はTTYドライバが読み撮った各EOF文字に対して1回だけ
返されます。 ``EOF`` が返された後に ``ttyRead()`` を呼び出すと基盤となるデバイス
ドライバからさらに文字を読み取ることになります。

``TTY_IRAW`` フラグがセットされている場合、TTYドライバは行バッファリングと
行編集 (input cooking) を行いません。ユーザバッファはまず、最後の ``ttyRead()``
呼び出しでTTYドライバの入力バッファに残っているデータから満たされます。ユーザが
提供するバッファの残りの部分は基盤となるデバイスドライバから文字を読み取ることで
満たされます。

TTYドライバは ``TTY_IRAW`` フラグがセットされていないと行バッファリングと
行編集 (input cooking) を行います。文字は行区切り文字が読み取られるか、TTY
ドライバの入力バッファが一杯になるまで、基盤となるデバイスドライバから読み取られます。
行は改行文字 (LF すなわち '\n') またはファイル終端文字 (EOF すなわち ASCII文字 0x04)
で終了させることができます。 ``TTY_ECHO`` フラグがセットされている場合は
各文字が読み取られた通りに出力されます。

行編集 (input cooking)を行うには一部の文字に対して特別な処理が必要です。
TTYドライバの入力バッファに文字が含まれている場合、バックスペース (BS すなわち
'\b') とデリート (DEL すねわち ASCII文字 0x7F) はTTYの入力バッファから最後の
文字を削除します。特定の入力フラグがセットされていると改行とキャリッジリターン
(CR すなわち '\r') 文字は編集されます。ファイル終端文字は ``ieof`` フラグを
セットします。その他の印字不可能文字は無視されます。

TTYのデバイスドライバに入力行がバッファリングされると、ユーザが提供したバッファが
TTYの入力バッファから満たされます。読み撮った文字がファイル終端文字だけだった
場合は ``EOF`` 定数が返されます。それ以外の場合は、ユーザバッファに読み込まれた
文字数が返されます。

TTYドライバは次の入力フラグを持ちます:

-  ``TTY_IRAW`` - バファリンと行編集無しで入力を読み取る
-  ``TTY_INLCR`` - ``'\n'`` を ``'\r'`` に変換する
-  ``TTY_IGNCR`` - ``'\r'`` を無視する
-  ``TTY_ICRNL`` - ``'\r'`` と ``'\n'`` に変換する
-  ``TTY_ECHO`` - 入力をエコーする

書き込み
----------

TTYドライバは出力をバッファリングしません。
:source:`ttyWrite() <device/tty/ttyWrite.c>` は基盤となるデバイスドライバに
文字を直接書き込みます。TTYドライバは特定の出力フラグがセットされていると
改行 (LF すなわち ``'\n'``) と復帰 (CR すなわち ``'\r'``) を処理します。

TTYドライバは次の出力フラグを持ちます:

-  ``TTY_ONLCR`` - ``'\n'`` を ``'\r\n'`` に変換する
-  ``TTY_OCRNL`` - ``'\r'`` を ``'\n'`` に変換する

制御
-------

TTYドライバには4つの制御関数があります。2つは入力フラグのセットとクリアを行い、
2つは出力フラグのセットとクリアを行います。各制御関数は変更されたフラグの以前の
状態を返します。これらは :source:`ttyControl() <device/tty/ttyControl.c>` に実装
されており、 :source:`control() <system/control.c>` を介して呼び出す必要があります。
